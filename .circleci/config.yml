# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
  node: circleci/node@5.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build_and_test:
      # Primary container image where all commands run
    docker:
    # Service container image
      - image: cimg/node:18.18
        environment:
          API_BASE_URL: https://simple-tasks-backend-vz2m.onrender.com
      - image: cimg/base
        command: docker login --username cpenaforte --password $DOCKERHUB_PASSWORD && docker-compose -f docker/docker-compose.backend.yml up -d


    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout             
      - run: node --version
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: docker ps && curl --retry-delay 5 --retry 10 --retry-connrefused -I localhost:3000
          name: Verify backend server is running
      - run:
          command: sudo apt-get update && sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2 libxtst6 xauth xvfb
          name: Install dependencies
      - run:
          command: ./node_modules/.bin/cypress install --force
          name: Install cypress
      - run:
          command: yarn start
          name: Dev App for tests
          background: true
      - run:
          command: yarn test:integration
          name: Run integration tests
      - run:
          command: yarn build
          name: Build application
      - run:
          command: yarn server
          name: Serve application
          background: true
      - run:
          command: sleep 5 && curl --retry-delay 5 --retry 10  --retry-connrefused -I localhost:4000
          name: Verify server is running

  deploy:
    machine:
      image: ubuntu-2004:current
    resource_class: medium
    steps:
      - run:
          name: Deploy API to Vercel
          command: |
            response=$(curl -s -w "%{http_code}" -o response.txt $DEPLOY_URI)
            response_code=${response:(-3)}
            if [ $response_code -eq 200 ]; then
              echo "Deployment successful!"
              cat response.txt  # Print the response body
            else
              echo "Deployment failed with response code: $response_code"
              cat response.txt  # Print the response body
              exit 1
            fi

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build_and_test_app:
    jobs:
      - build_and_test
      - deploy:
          requires:
           - build_and_test
          filters:
            branches:
                only: master